<?php
/**
 * @brief	Génération d'une épreuve
 *
 * Vue principale de la génération d'une épreuve QCM.
 * User: durandcedric
 * Date: 25/09/16
 * Time: 11:43
 *
 * Copyright (c) 2015-2017 Cédric DURAND (durandcedric@avitheque.net)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 */

// Récupération des données de la session
$oInstanceStorage = InstanceStorage::getInstance();

// Bouton [BAS DE PAGE]
ViewRender::addToMain("<span id=\"top\"><a class=\"page-top\" href=\"#bottom\" title=\"Bas de page...\">&#8595;</a></span>");

// ================================================================================================
// GÉNÉRATION
// ================================================================================================

// Titre de la page
$sTitrePage =  "<h2>Génération d'une épreuve QCM</h2>
				<p>
				</p>";
ViewRender::addToMain($sTitrePage);

// Récupération de la liste des formulaires QCM en attente de validation
$aListeGeneration		= $oInstanceStorage->getData('liste_generation');

// Construction du tableau récapitulatif des formulaires
$oGeneration = new DatatableHelper("table-generation", $aListeGeneration);
$oGeneration->setClassColumn("align-left strong", "titre_formulaire");
$oGeneration->setClassColumn("strong", "libelle_groupe");

// Formatage du champ DATETIME
$oGeneration->setFormatOnColumn('date_modification_formulaire',	DataHelper::DATA_TYPE_DATETIME);

// Personnalisation des noms de colonne
$aColonnes = array(
	'titre_formulaire'				=> "TITRE",
	'libelle_domaine'				=> "DOMAINE",
	'total_questions'				=> "QUESTIONS",
	'date_modification_formulaire'	=> "MODIFICATION",
	'libelle_groupe'				=> "GROUPE",
	'libelle_redacteur'				=> "REDACTEUR",
	'libelle_valideur'				=> "VALIDEUR"
);
$oGeneration->renameColumns($aColonnes, true);

// Indicateur de domaine non défini
$oGeneration->setConditionalClassOnColumn('id_domaine', '<=', "0", "grey", "TITRE");
$oGeneration->setConditionalClassOnColumn('id_domaine', '<=', "0", "strong red", "DOMAINE");

// Ajout d'une colonne [ACTION] avec un lien HREF
$oGeneration->addAnchorOnColumn("ACTION",			"id_formulaire",	"Générer",	"/generation/epreuve?id_formulaire=",		"green tooltip-track",					null,		"Générer le QCM pour une épreuve");

// Ajout du tableau à VIEW_MAIN
ViewRender::addToMain($oGeneration->renderHTML());

// ================================================================================================
// PROGRAMMATIONS
// ================================================================================================

// Titre de l'article
$sTitrePage =  "<hr class=\"blue margin-V-30\" />
				<h2>Liste des dernières programmations</h2>
				<p>
				</p>";
ViewRender::addToMain($sTitrePage);

// Récupération de la liste des épreuves
$aListeProgrammations			= $oInstanceStorage->getData('liste_programmations');

// Construction du tableau récapitulatif des formulaires
$oProgrammation = new DatatableHelper("table-epreuves", $aListeProgrammations);
$oProgrammation->setClassColumn("no-wrap strong", "libelle_stage_complet");
$oProgrammation->setClassColumn("align-left strong", "titre_formulaire");
$oProgrammation->setClassColumn("strong", "libelle_groupe");


// Formatage du champ DATE
$oProgrammation->setFormatOnColumn('datetime_epreuve',	DataHelper::DATA_TYPE_DATETIME);

// Personnalisation des noms de colonne
$aColonnes = array(
	'libelle_stage_complet'			=> "STAGE",
	'libelle_epreuve'				=> "ÉPREUVE",
	"QCM",							// Injection d'une colonne vide
	'SUM(capacite_statut_salle)'	=> "CAPACITÉ D'ACCUEIL",
	'COUNT(id_stage_candidat)'		=> "NOMBRE DE CANDIDATS",
	'datetime_epreuve'				=> "PROGRAMMATION DE L'ÉPREUVE",
	'duree_epreuve'					=> "DURÉE (en&nbsp;minutes)",
	'libelle_groupe'				=> "GROUPE"
);
$oProgrammation->renameColumns($aColonnes, true);

// Mise en évidence d'une épreuve qui n'est pas associée à un formulaire
$oProgrammation->setConditionalTextOnColumn("QCM", 'id_formulaire<>%d', 0, "X");

// Tri du tableau sur la colonne `date_epreuve` par ordre DESC
$oProgrammation->setOrderColumn('datetime_epreuve', DatatableHelper::ORDER_DESC);

// Ajout d'une colonne [ACTION] avec un lien HREF - (TOUJOURS DISPONIBLE)
$oProgrammation->addAnchorOnColumn("ACTION",		"id_epreuve",		"Imprimer",	"/generation/imprimer?id_epreuve=",			"blue tooltip-track",					"_blanck",	"Imprimer la programmation de l'épreuve");

// Indicateur d'annulation toujours accessible pour l'administrateur
$oAuthenticateManager	= AuthenticateManager::getInstance();
if (!$oAuthenticateManager->isProfil(AclManager::ID_PROFIL_ADMINISTRATOR)) {
	$oProgrammation->setConditionalClassOnColumn('fin_epreuve', '<', 'maintenant', "strong grey", $aColonnes);
	$oProgrammation->setConditionalClassOnColumn('fin_epreuve', '<', 'maintenant', "disabled", "ACTION");
}

// Ajout d'une colonne [ACTION] avec un lien HREF - DISPONIBLE TANT QUE L'ÉPREUVE N'A PAS DÉBUTÉE
$oProgrammation->addAnchorOnColumn("ACTION",		"id_epreuve",		"Éditer",	"/generation/epreuve?id_epreuve=",			"green tooltip-track", 					null,		"Éditer l'épreuve");
$oProgrammation->addAnchorOnColumn("ACTION",		"id_epreuve",		"Annuler",	"/generation/supprimer?id_epreuve=",		"red confirm-delete tooltip-track", 	null,		"Annuler l'épreuve");

// Coloration de l'épreuve en ROUGE si il y a une erreur
$oProgrammation->setConditionalClassOnColumn('SUM(capacite_statut_salle)', '<', 'COUNT(id_stage_candidat)', "error", array("CAPACITÉ D'ACCUEIL", "NOMBRE DE CANDIDATS"));


// Ajout du tableau à VIEW_MAIN
ViewRender::addToMain($oProgrammation->renderHTML());

// ================================================================================================
// PROGRAMMATION D'UNE NOUVELLE ÉPREUVE
// ================================================================================================

// Boucle de création de la liste des questions
ViewRender::addToFooter("<div class=\"group-button\">
							<a class=\"button green tooltip-track\" href=\"/generation/epreuve\" title=\"Programmer une nouvelle épreuve parmis les formulaires proposés\" role=\"touche_A\">Ajouter une nouvelle épreuve</a>
						</div>");

// BOUTON [HAUT DE PAGE]
ViewRender::addToMain("<span id=\"bottom\"><a class=\"page-bottom\" href=\"#top\" title=\"Haut de page...\">&#8593;</a></span>");

// Rendu final de la vue
ViewRender::render();
