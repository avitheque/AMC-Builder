<?php
/**
 * @brief	Tâches
 *
 * Vue permettant l'affichage des tâches disponibles pour le PLANNING.
 * User: durandcedric
 * Date: 25/09/16
 * Time: 11:43
 *
 * Copyright (c) 2015-2017 Cédric DURAND (durandcedric@avitheque.net)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 */

// Récupération de l'instance du singleton InstanceStorage permettant de gérer les échanges avec le contrôleur
$oInstanceStorage	= InstanceStorage::getInstance();

// Liste des tâches disponibles
$aListeElements		= $oInstanceStorage->issetData('liste_taches')	? $oInstanceStorage->getData('liste_taches')	: array();

// Durée par défaut
$nDureeDefaut		= $oInstanceStorage->issetData('item_duree')	? $oInstanceStorage->getData('item_duree')		: 1;

/** Construction de chaque élément disponible de la forme suivante :
 *
 * @code
 *	array(
 *		'planning_id'		=> null,
 *		'tache_id'			=> "A",
 *		'tache_title'		=> "Élément A",
 *		'tache_location'	=> 1,
 *		'tache_describe'	=> "Description de la tâche...",
 *		'tache_groupe'		=> 1,
 *		'tache_participant'	=> "Personne 1, Personne 2, Personne 3",
 *		'tache_annee'		=> null,
 *		'tache_mois'		=> null,
 *		'tache_jour'		=> null,
 *		'tache_heure'		=> null,
 *		'tache_duree'		=> 1,
 *		'tache_update'		=> 0
 *	);
 * @encode
 */
foreach ($aListeElements as $aItem) {
	// ID			: identifiant en base de données pour l'enregistrement
	$nId			= DataHelper::get($aItem,	'planning_id',			DataHelper::DATA_TYPE_INT,		null);
	// TACHE		: identifiant de la tâche en base de données (élément du planning, cours, ...)
	$nTacheId 		= DataHelper::get($aItem,	'tache_id',				DataHelper::DATA_TYPE_INT,		null);
	// TITRE		: titre de présentation de la tâche
	$sTitle			= DataHelper::get($aItem,	'tache_title',			DataHelper::DATA_TYPE_STR,		null);
	// LOCATION		: description de la tâche (éventuellement le numéro de SALLE)
	$nIdLocation	= DataHelper::get($aItem,	'tache_location',		DataHelper::DATA_TYPE_INT,		null);
	// DESCRIPTION	: description de la tâche (éventuellement le numéro de SALLE)
	$sDescription	= DataHelper::get($aItem,	'tache_describe',		DataHelper::DATA_TYPE_TXT,		null);
	// GROUPE		: identifiant correspondant à la liste des personnels participants à la tâche
	$nIdGroupe		= DataHelper::get($aItem,	'tache_groupe',			DataHelper::DATA_TYPE_INT,		null);
	// PARTICIPANT	: liste des personnels participants à la tâche
	$aParticipant	= DataHelper::get($aItem,	'tache_participant',	DataHelper::DATA_TYPE_ARRAY,	null);
	// ANNEE		: année du PLANNING
	$nYear			= DataHelper::get($aItem,	'tache_annee',			DataHelper::DATA_TYPE_INT,		null);
	// MOIS			: mois du PLANNING
	$nMonth			= DataHelper::get($aItem,	'tache_mois',			DataHelper::DATA_TYPE_INT,		null);
	// JOUR			: jour de positionnement de la tâche
	$nDay			= DataHelper::get($aItem,	'tache_jour',			DataHelper::DATA_TYPE_INT,		null);
	// HEURE		: heure de début dans le JOUR
	$nHour			= DataHelper::get($aItem,	'tache_heure',			DataHelper::DATA_TYPE_INT,		null);
	// DUREE		: durée de la tâche si présente, sinon celle par défaut
	$nDuration 		= DataHelper::get($aItem,	'tache_duree',			DataHelper::DATA_TYPE_INT,		$nDureeDefaut);
	// UPDATE		: indicateur de modification de la tâch
	$bUpdate 		= DataHelper::get($aItem,	'tache_update',			DataHelper::DATA_TYPE_BOOL,		false);

	// Contenu HTMl de l'élément
	$sContent		=  "<input type=\"hidden\" name=\"tache_participant[]\"	value=\"" . implode(" - ", $aParticipant) . "\" />";

	// Création d'un nouvel élément
	$oItem = new Planning_ItemHelper($nTacheId, $sTitle, null, $sContent);
	$oItem->setYear($nYear);							# Année à laquelle se déroule la tâche
	$oItem->setMonth($nMonth);							# Mois auquel se déroule la tâche
	$oItem->setDay($nDay);								# Jour auquel se déroule la tâche
	$oItem->setHour($nHour);							# Heure de début de la tâche
	$oItem->setDuration($nDuration);					# Durée de la tâche
	$oItem->setLocation($nIdLocation, $sDescription);	# Localisation de la tâche
	$oItem->setParticipant($nIdGroupe, $aParticipant);	# Liste des participants
	$oItem->setUpdateStatus($bUpdate);					# Indicateur de modification
	print $oItem->renderHTML();
}
